{"version":3,"sources":["component/Keyboard/styled.js","component/Keyboard/Keyboard.js","styled.js","App.js","reportWebVitals.js","index.js"],"names":["White","styled","div","Black","SoundWrapper","Keyboard","isExistBlack","sound","octave","record","handleClickKeyboard","isBlack","Audio","play","onClick","Wrapper","Header","KeyBoardWrapper","PlayerWrapper","Recording","Play","App","useState","isRecording","setIsRecording","recording","setRecording","recordingStartAt","setRecordingStartAt","useEffect","Date","keyboard","recordKeyBoard","prev","playAt","keyboardList","map","idx","Math","floor","forEach","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.447bb9a0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const White = styled.div`\n  width: 50px;\n  height: 300px;\n  cursor: pointer;\n  box-shadow: 0 5px 1px rgb(32 32 32 / 20%);\n  border-radius: 0px 0px 4px 4px;\n  transition: .1s all;\n  background: #ffffff;\n\n  &:active {\n    box-shadow: none;\n    margin-top: 5px;\n    background-color: rgb(32 32 32 / 20%);\n  }\n`\n\nexport const Black = styled.div`\n  width: 40px;\n  height: 150px;\n  background-color: #000000;\n  position: absolute;\n  top: 0;\n  left: 32px;\n  pointer-events: initial;\n  z-index: 3;\n  cursor: pointer;\n  border-radius: 0px 0px 4px 4px;\n  box-shadow: 0 5px 1px rgb(32 32 32 / 20%);\n\n  transition: .1s all;\n\n  &:active {\n    box-shadow: none;\n    margin-top: 5px;\n  }\n`\n\nexport const SoundWrapper = styled.div`\n  position: relative;\n`","import * as S from './styled';\n\nconst Keyboard = ({isExistBlack, sound, octave, record}) => {\n  const handleClickKeyboard = (sound, octave, isBlack) => () => {\n    const audio = new Audio(`./media/${sound}${octave}.mp3`);\n    audio.play();\n    record(sound, octave, isBlack);\n  };\n\n  return (\n    <S.SoundWrapper isExistBlack={isExistBlack}>\n      {isExistBlack ? \n        <>\n          <S.White onClick={handleClickKeyboard(sound, octave, false)}/>\n          <S.Black onClick={handleClickKeyboard(`${sound}-`, octave, true)}/>\n        </>\n        :\n        <S.White onClick={handleClickKeyboard(sound, octave, false)}/>\n      }\n    </S.SoundWrapper>\n  )\n}\n\nexport default Keyboard;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n  background: rgb(146 139 116 / 16%);\n`\n\nexport const Header = styled.div`\n  font-family: 'Pacifico';\n  font-size: 60px;\n  cursor: default;\n  user-select: none;\n`\n\nexport const KeyBoardWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  height: 305px;\n`\n\nexport const PlayerWrapper = styled.div`\n  display: flex;\n  margin-top: 20px;\n`\n\nexport const Recording = styled.div`\n  background: rgb(232, 4, 21);\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  font-size: 24px;\n  color: #ffffff;\n  box-sizing: border-box;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  padding: 3px 0px 0px 0px;\n\n  margin-right: 20px;\n`\n\nexport const Play = styled.div`\n  background: blue;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  font-size: 28px;\n  color: #ffffff;\n  box-sizing: border-box;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  box-sizing: border-box;\n  padding: 0px 0px 1px 3px;\n`","import Keyboard from './component/Keyboard/Keyboard';\n\nimport {useState, useEffect} from 'react';\n\nimport * as S from './styled';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recording, setRecording] = useState([]);\n  const [recordingStartAt, setRecordingStartAt] = useState(0);\n\n  useEffect(() => {\n    if (isRecording) {\n      setRecording([]);\n      setRecordingStartAt(new Date());\n    }\n  }, [isRecording])\n\n  const keyboard = [{\n    sound: 'c',\n    isExistBlack: true\n  },\n  {\n    sound: 'd',\n    isExistBlack: true\n  },\n  {\n    sound: 'e',\n    isExistBlack: false\n  },\n  {\n    sound: 'f',\n    isExistBlack: true\n  },\n  {\n    sound: 'g',\n    isExistBlack: true\n  },\n  {\n    sound: 'a',\n    isExistBlack: true\n  },\n  {\n    sound: 'b',\n    isExistBlack: false\n  }]\n\n  const handleRecording = () => {\n    setIsRecording(prev => !prev);\n  }\n\n  const handlePlaying = () => {\n    recording.forEach(({sound, octave, playAt}) => {\n      setTimeout(() => {\n        const audio = new Audio(`./media/${sound}${octave}.mp3`);\n        audio.play();\n      }, playAt)\n    })\n  }\n\n  const recordKeyBoard = (sound, octave, isBlack) => {\n    if (isRecording) {\n      setRecording(prev => [...prev, {\n        sound: isBlack ? `${sound}-` : sound,\n        octave,\n        playAt: new Date() - recordingStartAt\n      }]);\n    }\n  }\n\n  const keyboardList = [...keyboard, ...keyboard, ...keyboard].map(({isExistBlack, sound}, idx) => {\n    const octave = Math.floor(idx / 7) + 3;\n    \n    return (\n      <Keyboard \n        sound={sound}\n        octave={octave}\n        isExistBlack={isExistBlack} \n        record={recordKeyBoard}\n      />\n    )\n  })\n\n  return (\n    <S.Wrapper>\n      <S.Header>\n        Play the Piano!\n      </S.Header>\n      <S.PlayerWrapper>\n        <S.Recording \n          isRecording={isRecording}\n          onClick={handleRecording}\n        >\n          {\n            isRecording ? '■' : '●' \n          }\n        </S.Recording>\n        <S.Play onClick={handlePlaying}>▶</S.Play>\n      </S.PlayerWrapper>\n      <S.KeyBoardWrapper>\n        {keyboardList}\n      </S.KeyBoardWrapper>\n    </S.Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}